# Common tasks before building DOMjudge.
---
- name: add domjudge to hosts file
  lineinfile:
    dest: /etc/hosts
    regexp: 'domserver$'
    line: "{{DOMSERVER_IP}}	domserver"

- name: create domjudge user
  user:
    name: domjudge
    shell: /bin/bash
    groups: sudo
    password: "{{DJ_SHELL_USER_PW | default(omit)}}"

- include: common_tasks_all.yml

- name: Allow 'sudo' group to have passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%sudo'
    line: '%sudo ALL=(ALL) NOPASSWD: ALL'

- name: create working copy directory
  file:
    path: "{{DJ_DIR}}"
    state: directory
    owner: domjudge
    group: domjudge

- name: create working copy of the domjudge repo
  become: yes
  become_user: domjudge
  git: repo={{DJ_GIT_REPO}} dest={{DJ_DIR}} version={{DJ_BRANCH}} accept_hostkey=yes update=yes
  register: git_working_copy

- name: Check composer dependencies present
  local_action: stat path=files/lib/vendor
  register: libvendor
  become: no

- name: Copy in composer dependencies (if they exist locally)
  become: no
  tags: sync
  synchronize:
    src: files/lib/vendor/
    dest: "{{DJ_DIR}}/lib/vendor/"
    owner: no
    use_ssh_args: true
    rsync_path: sudo rsync
  when: libvendor.stat.exists

- name: fix ownership of lib/vendor
  file:
    path: "{{DJ_DIR}}/lib/vendor"
    recurse: yes
    owner: domjudge
    group: domjudge

- name: enable GDM autologin
  lineinfile:
    path: /etc/gdm3/custom.conf
    regexp: 'AutomaticLoginEnable'
    line: 'AutomaticLoginEnable=true'
    create: yes
  notify: restart gdm

- name: Automatically login domjudge user
  lineinfile:
    path: /etc/gdm3/custom.conf
    regexp: 'AutomaticLogin'
    line: 'AutomaticLogin=domjudge'
  notify: restart gdm

- name: make sure autostart directory exists
  file: dest=/home/domjudge/.config/autostart state=directory owner=domjudge group=domjudge
  tags: fix_autostart

- name: install SSL server certificates
  copy:
    src: "{{ item }}"
    dest: /etc/ssl/certs/
    owner: root
    group: root
    mode: 0644
  with_fileglob:
    - files/ssl/*.crt
  notify: update-ca-certificates

- name: create ca certificates shared directory
  file:
    dest: /usr/local/share/ca-certificates
    state: directory
    owner: root
    group: root

- name: install SSL server certificates into CA certificates
  copy:
    src: "{{ item }}"
    dest: /usr/local/share/ca-certificates
    owner: root
    group: root
    mode: 0644
  with_fileglob:
    - files/ssl/*.crt
  notify: update-ca-certificates
