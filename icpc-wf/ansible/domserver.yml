---

- name: setup domserver
  hosts: domserver
  vars:
    host_type: domserver
  become: yes
  handlers:
    - name: restart mysql
      service: name=mysql state=restarted
    - name: restart nginx
      service: name=nginx state=restarted
    - name: restart PHP FPM
      service: name=php7.4-fpm state=restarted
    - name: update-ca-certificates
      command: update-ca-certificates
    - name: restart rsyslog
      service: name=rsyslog enabled=yes state=restarted
    - name: restart systemctl
      shell: systemctl daemon-reload
    - name: restart gdm
      service: name=gdm3 enabled=yes state=restarted
    - name: restart nginx-exporter
      service: name=prometheus-nginx-exporter enabled=yes state=restarted
    - name: restart php-exporter
      service: name=php-fpm-exporter enabled=yes state=restarted
  tasks:
    - name: include global variables
      include_vars: variables.yml

    - include: common_tasks_prebuild.yml

    - name: install domserver required packages
      apt:
        state: present
        pkg:
        - mariadb-server
        - nginx
        - php-fpm
        - python3-mysqldb
        - php-intl
        - mycli
        - macchanger
        - keepalived
        - prometheus-nginx-exporter
        - prometheus-mysqld-exporter
        - molly-guard
        # expects config in /var/lib/prometheus/.my.cnf

    - name: copy in MySQL config
      copy: src=files/my.cnf dest=/root/.my.cnf

    - name: set PHP timezone for FPM
      lineinfile:
        dest: /etc/php/7.4/fpm/php.ini
        state: present
        regexp: 'date\.timezone\s*='
        line: 'date.timezone = {{TIMEZONE}}'

    - name: enable php modules
      command: phpenmod {{item}}
      args:
        creates: /etc/php/7.4/fpm/conf.d/20-{{item}}.ini
      with_items:
        - zip
        - intl

    - name: create directory for systemd mysql settings
      file: path=/etc/systemd/system/mysql.service.d/ state=directory

    - name: update systemd so mysql has bigger limits
      copy: src=files/mysql.override.cnf dest=/etc/systemd/system/mysql.service.d/override.conf
      notify: restart mysql

    - name: add mysql config snippet to increase limit
      copy: src=files/mysql.domjudge.cnf dest=/etc/mysql/mariadb.conf.d/zz_domjudge.cnf
      notify: restart mysql

    - name: add mysql config snippet for replication
      template: src=files/mysql.replication.cnf.j2 dest=/etc/mysql/mariadb.conf.d/zzz_replication.cnf
      notify: restart mysql
      when: REPLICATION_PASSWORD is defined

    - name: disable mysql listen on localhost only
      replace:
        path: /etc/mysql/mariadb.conf.d/50-server.cnf
        regexp: '^bind-address\s*='
        replace: '#bind-address ='
      when: REPLICATION_PASSWORD is defined

    - name: copy script to setup replication
      template: src=files/setup-replication.sh.j2 dest=/usr/local/sbin/setup-replication.sh mode=0755
      when: REPLICATION_PASSWORD is defined

    - name: create mysql replication user
      mysql_user:
        name: replication
        host: '%'
        password: "{{REPLICATION_PASSWORD}}"
        append_privs: true
        priv: '*.*:REPLICATION SLAVE'
        state: present
      when: REPLICATION_PASSWORD is defined

    - name: make sure mysql is restarted
      meta: flush_handlers

    - name: Create MySQL authentication file
      template:
        src: files/grafana/my.cnf.j2
        dest: /var/lib/prometheus/.my.cnf
        owner: prometheus
      when: COLLECTD_MYSQL_PASSWORD is defined

    - name: Start/enable our services
      service: name={{ item }} state=started enabled=yes
      when: COLLECTD_MYSQL_PASSWORD is defined
      with_items:
       - prometheus-mysqld-exporter.service

    - include: common_tasks_build.yml

# When using replication, the DB will be dropped and recreated on the slave later.
    - name: check if the database is configured
      command: "{{DJ_DIR}}/bin/dj_setup_database -u root status"
      register: db_status
      ignore_errors: true
    - name: make sure the database is configured
      command: "{{DJ_DIR}}/bin/dj_setup_database -u root bare-install"
      when: "'failed' in db_status.stdout"

    - name: disable developer mode
      lineinfile:
        regexp: '^APP_ENV=dev'
        state: absent
        dest: "{{DJ_DIR}}/webapp/.env.local"

    - include: nginx-setup.yml

    - name: Get NGINX status
      copy: src=files/grafana/nginx-status.conf dest=/etc/nginx/sites-enabled/status.conf
      notify: restart nginx

    - name: Prometheus nginx exporter
      lineinfile:
        dest: /etc/default/prometheus-nginx-exporter
        state: present
        regexp: '^ARGS=""'
        line: 'ARGS="-nginx.scrape-uri=http://localhost:8080/basic_status"'
      notify: restart nginx-exporter

    - name: Install PHP-fpm exporter binary
      ansible.builtin.unarchive:
        src: files/grafana/php-fpm_exporter_2.0.3_linux_amd64.tar.gz
        dest: /usr/bin/
        exclude:
          - LICENSE
          - README.md

    - name: Export PHP-FPM metrics
      copy: src=files/grafana/php-fpm-exporter.service dest=/etc/systemd/system/php-fpm-exporter.service
      notify: restart php-exporter

    - name: add autostart shortcuts
      copy: src=files/{{item}}.desktop dest=/home/domjudge/.config/autostart/ owner=domjudge group=domjudge mode=0755
      with_items:
        - htop
        - taillog-domserver-nginx-error
        - taillog-domserver-symfony-error

    - name: Configure keepalived for domjudge IP failover
      template:
        src: files/keepalived.conf.j2
        dest: /etc/keepalived/keepalived.conf
      when: REPLICATION_PASSWORD is defined

    - name: Start but disable keepalived (so it does not fail back to primary)
      service:
        name: keepalived
        enabled: false
        state: restarted
      when: REPLICATION_PASSWORD is defined
