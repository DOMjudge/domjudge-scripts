---

- name: setup domserver
  hosts: domserver
  become: yes
  handlers:
    - name: restart mysql
      service: name=mysql state=restarted
    - name: restart apache2
      service: name=apache2 state=restarted
  tasks:
    - name: include global variables
      include_vars: variables.yml

    - name: Allow 'sudo' group to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%sudo'
        line: '%sudo ALL=(ALL) NOPASSWD: ALL'
    - name: create domjudge user
      user:
        name: domjudge

    - name: set timezone
      timezone:
        name: Europe/London

    - name: set PHP timezone
      lineinfile:
        dest: /etc/php/7.0/apache2/php.ini
        state: present
        regexp: 'date\.timezone\s*='
        line: 'date.timezone = Europe/London'

    - name: install required packages
      apt: pkg={{item}} state=present
      with_items:
        - autoconf
        - automake
        - curl
        - git
        - gcc
        - g++
        - make
        - ntp
        - zip
        - unzip
        - mysql-server
        - apache2
        - php
        - php-cli
        - libapache2-mod-php
        - php-gd
        - php-curl
        - php-mysql
        - php-json
        - php-zip
        - bsdmainutils
        - phpmyadmin
        - ntp
        - libcgroup-dev
        - libcurl4-gnutls-dev
        - libjsoncpp-dev
        - libmagic-dev
        - composer

    - name: update mysql max connections
      lineinfile:
        regexp: '^.*max_connections'
        line: 'max_connections = 1000'
        dest: /etc/mysql/mariadb.conf.d/50-server.cnf
      notify: restart mysql

    - name: configure git as domjudge user
      become: yes
      become_user: domjudge
      #command: git config --global {{item.name}} "{{item.value}}"
      ini_file: dest=/home/domjudge/.gitconfig section=user option="{{item.name}}" value="{{item.value}}"
      with_items:
        - { name: 'email', value: 'team@domjudge.org' }
        - { name: 'name', value: 'DOMjudge @ NWERC' }

    - name: create domjudge git repo
      become: yes
      become_user: domjudge
      git: repo=https://github.com/DOMjudge/domjudge.git dest={{DJDIR}} version=master update=no
      register: create_repo

# Update separately to preserve local (un)committed changes:
    - name: update domjudge git repo
      become: yes
      become_user: domjudge
      shell: cd {{DJDIR}} && git stash && git pull --rebase && git stash pop || true

    - name: run maintainer-conf
      become: yes
      become_user: domjudge
      command: make maintainer-conf
      register: dj_configured
      args:
        chdir: "{{DJDIR}}"
        creates: "{{DJDIR}}/paths.mk"

    - name: clear symfony cache
      command: rm -rf {{DJDIR}}/webapp/var/cache/dev {{DJDIR}}/webapp/var/cache/prod
      when: dj_configured.changed

    - name: build domjudge
      become: yes
      become_user: domjudge
      shell: make dist && make maintainer-install chdir={{DJDIR}}
      when: dj_configured.changed

    - name: fix permissions on things
      file: path={{DJDIR}}/etc/dbpasswords.secret group=www-data mode=g+r
    - name: copy domjudge-sudoers file
      copy: remote_src=True src={{DJDIR}}/etc/sudoers-domjudge dest=/etc/sudoers.d/domjudge mode=0440 owner=root group=root

    - name: check if the database is configured
      command: "{{DJDIR}}/bin/dj_setup_database -u root status"
      register: db_status
      ignore_errors: true
    - name: make sure the database is configured
      command: "{{DJDIR}}/bin/dj_setup_database -u root bare-install"
      when: "'failed' in db_status.stdout"

    - name: fix background color
      lineinfile:
        regexp: '^(\s*background-color):\s+white\s*;'
        line: '\1: {{BACKGROUND_COLOR}};'
        backrefs: yes
        dest: "{{DJDIR}}/webapp/web/style.css"
      when: BACKGROUND_COLOR is defined

    - name: create a self signed cert
      shell: "openssl req -newkey rsa:2048 -new -x509 -days 365 -nodes -out /etc/ssl/certs/domjudge.crt -keyout /etc/ssl/private/domjudge.pem -subj /CN={{ansible_hostname}}"
      args:
        creates: /etc/ssl/private/domjudge.pem
    #- name: update apache to use new cert
    #  lineinfile:

    - name: Update servername in apache config
      lineinfile:
        insertbefore: '^#Global config'
        line: 'Servername {{ansible_hostname}}'
        dest: /etc/apache2/apache2.conf
      notify: restart apache2
    - name: link in domjudge apache conf
      file: src={{DJDIR}}/etc/apache.conf dest=/etc/apache2/conf-available/domjudge.conf state=link
      notify: restart apache2

    - name: enable apache2 conf for domjudge
      file:
        src:  /etc/apache2/conf-available/domjudge.conf
        dest: /etc/apache2/conf-enabled/domjudge.conf
        state: link
      notify: restart apache2

    - name: enable apache2 modules
      apache2_module: name={{item}} state=present
      with_items:
        - ssl
        - php7.0
      notify: restart apache2

    - name: apache2 http redirect
      lineinfile:
        dest: /etc/apache2/sites-available/000-default.conf
        state: present
        insertafter: '^\s*DocumentRoot\s'
        line: '	Redirect permanent / {{DOMSERVER}}/'
      notify: restart apache2

    - name: enable apache2 default site
      file:
        src:  /etc/apache2/sites-available/000-default.conf
        dest: /etc/apache2/sites-enabled/000-default.conf
        state: link
      notify: restart apache2
