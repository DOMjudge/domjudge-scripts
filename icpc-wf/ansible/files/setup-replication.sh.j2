#!/bin/sh -e

MASTER=$1

if [ -z "$MASTER" ]; then
    echo "Error: specify master host to slave to."
    exit 1
fi

if [ $(id -un) != 'root' ]; then
    echo "Error: this script must be run as root."
    exit 1
fi

MASTER_SERVER_ID=$(ssh "$MASTER" "cat /etc/mysql/conf.d/zzz_replication.cnf" | \
		       grep server_id | sed 's/.*server_id *= *//')

if [ -z "$MASTER_SERVER_ID" ]; then
    echo "Error: cannot fetch master server_id."
    exit 1
fi

echo "Recreating empty database..."
mysql -e 'STOP SLAVE; DROP DATABASE domjudge;'
{{DJ_DIR}}/sql/dj_setup_database create-db-users

ssh "$MASTER" "service php7.4-fpm stop"

MASTER_STATUS=$(ssh "$MASTER" "mysql -e 'SHOW MASTER STATUS;'" | tail -n1)
MASTER_BINLOG=$(echo "$MASTER_STATUS" | cut -f 1)
MASTER_LOGPOS=$(echo "$MASTER_STATUS" | cut -f 2)

if [ -z "$MASTER_BINLOG" -o -z "$MASTER_LOGPOS" ]; then
    echo "Error: cannot fetch master status."
    exit 1
fi

TMPFILE="/tmp/dj_setup_replication.$MASTER.$$.sql"
echo "Loading SQL from '$MASTER', also storing into '$TMPFILE'..."
ssh "$MASTER" "mysqldump --opt domjudge" | tee "$TMPFILE" | pv | mysql domjudge

echo "Setting up replication..."
mysql -e "
CHANGE MASTER TO MASTER_HOST='10.3.3.${MASTER_SERVER_ID}',
                 MASTER_USER='replication',
                 MASTER_PASSWORD='{{REPLICATION_PASSWORD}}',
                 MASTER_LOG_FILE='${MASTER_BINLOG}',
                 MASTER_LOG_POS=${MASTER_LOGPOS};
START SLAVE;"

ssh "$MASTER" "service php7.4-fpm start"

if ! mysql -e 'SHOW SLAVE STATUS\G' | grep 'Slave_SQL_Running: Yes' ; then
    echo "Error: slave SQL replication not running."
    exit 1
fi

echo "Tracking slave synchronization, press ctrl+c to stop."
while true ; do
    SLAVE_LOGPOS=$(mysql -e 'SHOW SLAVE STATUS\G' | grep 'Exec_Master_Log_Pos:' | sed 's/.*: *//')
    echo "Slave synchronized to log position $SLAVE_LOGPOS / $MASTER_LOGPOS ..."
    if  [ "$SLAVE_LOGPOS" -ge "$MASTER_LOGPOS" ]; then
	break
    fi
    sleep 1
done

exit 0
