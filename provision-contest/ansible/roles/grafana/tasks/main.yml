---
- name: Install dependencies
  apt:
    state: present
    install_recommends: false
    pkg:
      - nginx
      - prometheus

# Setup Prometheus, which scrapes all metrics from the monitored machines
# The client exposes the metrics (on different ports/URIs) and we collect those
- name: Set up prometheus scrapes
  template:
    src: prometheus.yml.j2
    dest: /etc/prometheus/prometheus.yml
    mode: 0644
    owner: root
    group: root
  notify: Restart prometheus

# Setup loki which gathers our logs
- name: Install loki
  unarchive:
    src: https://github.com/grafana/loki/releases/download/v2.5.0/loki-linux-amd64.zip
    dest: /usr/bin/
    remote_src: true
    owner: domjudge
    group: domjudge
  when: loki

- name: Dir for loki settings
  file:
    state: directory
    path: /etc/grafana/loki/
    owner: root
    group: root
    mode: 0755
  when: loki

- name: Set loki settings
  copy:
    src: loki-local-config.yaml
    dest: /etc/grafana/loki/
    owner: root
    group: root
    mode: 0644
  when: loki
  notify: Restart loki

- name: Setup loki systemd
  copy:
    src: loki.service
    dest: /etc/systemd/system/
    mode: 0655
  when: loki
  notify: Restart loki

- name: Start loki service
  service:
    name: loki
    state: started
    enabled: true
  when: loki

## Setup grafana
- name: Install grafana
  when: not WF_RESTRICTED_NETWORK
  apt:
    deb: https://dl.grafana.com/oss/release/grafana_11.1.3_amd64.deb
    state: present
  notify: Restart grafana

- name: Install grafana from local deb
  when: WF_RESTRICTED_NETWORK
  block:
    - name: Copy local grafana deb to monitoring host
      copy:
        src: grafana.deb
        dest: /srv/grafana.deb

    - name: Install local archive on remote
      apt:
        deb: /srv/grafana.deb
        state: present
      notify: Restart grafana

- name: Configure grafana
  synchronize:
    src: files/grafana/environment
    dest: /etc/default/grafana-server
  notify: Restart grafana

- name: Set up grafana datasources
  synchronize:
    src: files/grafana/datasources.yml
    dest: /etc/grafana/provisioning/datasources/default.yml
  notify: Restart grafana

- name: Set up grafana dashboards
  synchronize:
    src: files/grafana/dashboards.yml
    dest: /etc/grafana/provisioning/dashboards/default.yml
  notify: Restart grafana

- name: Copy grafana dashboards
  synchronize:
    src: dashboards/
    dest: /etc/grafana/dashboards/
  notify: Restart grafana

# Setup nginx with selfsigned certificate
- name: Copy ssl cert
  synchronize:
    src: ssl.crt
    dest: /etc/ssl/certs/grafana.crt
  notify: Restart nginx

- name: Copy ssl key
  synchronize:
    src: ssl.key
    dest: /etc/ssl/private/grafana.key
  notify: Restart nginx

- name: Copy default nginx config
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/sites-enabled/grafana.conf
    owner: root
    group: root
    mode: 0644
  notify: Restart nginx
